<?php

namespace app\modules\admin\controllers;

use app\models\MetaInfo;
use app\models\Price;
use app\modules\admin\models\ImageHelper;
use app\modules\admin\models\Service;
use yii\di\Instance;
use yii\helpers\Json;
use yii\helpers\VarDumper;
use yii\web\UploadedFile;

class ServiceController extends \app\modules\admin\controllers\AdminController
{
    public  function beforeAction($action)
    {
        if (\Yii::$app->user->isGuest) {
            return $this->redirect(['/admin/admin/login']);
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $newService = new Service();
        $services = Service::find()->orderBy('index asc')->all();

        return $this->render('index', ['newService' => $newService, 'services' => $services]);
    }

    public function actionAddNewService()
    {
        if (\Yii::$app->request->isPost) {
            $newService = new Service();
            $newService->load(\Yii::$app->request->post());
            if ($newService->save()) {
                \Yii::$app->session->setFlash('success', 'Новая услуга добавлена!');
            } else {
                foreach ($newService->getErrors() as $error) {
                    \Yii::$app->session->setFlash('warning', $error);
                }
            }
        }

        return $this->redirect('/admin/service/index');
    }

    public function actionAddNewPrice()
    {
        $post = \Yii::$app->request->post();
        if (\Yii::$app->request->isPost) {
            if ($price = Price::find()->andWhere(['id' => $post['Price']['id']])->one()) {
                $message = 'Прайс изменен!';
            } else {
                $price = new Price();
                $message = 'Прайс добавлен!';
            }
            $price->load($post);
            if ($price->save()) {
                \Yii::$app->session->setFlash('success', $message);
            } else {
                foreach ($price->getErrors() as $error) {
                    \Yii::$app->session->setFlash('warning', $error);
                }
            }
        }

        return $this->redirect('/admin/service/edit?tab=price&id=' . $price->service_id);
    }

    public function actionDeletePrice($id)
    {
        $priceModel = Price::find()->where(['id' => $id])->one();
        $serviceId = $priceModel->service_id;
        if ($priceModel->delete()) {
            \Yii::$app->session->setFlash('success', 'Прайс удален!');
        } else {
            foreach ($priceModel->getErrors() as $error) {
                \Yii::$app->session->setFlash('warning', $error);
            }
        }

        return $this->redirect('/admin/service/edit?tab=price&id=' . $serviceId);
    }

    public function actionEditPrice($id, $serviceId = null)
    {
        if ($id == Price::NEW_PRICE) {
            $model = new Price();
            $model->service_id = $serviceId;
        } else {
            $model = Price::find()->where(['id' => $id])->one();
        }

        return $this->renderAjax('_modal', ['model' => $model]);
    }

    public function actionChangeIndex()
    {
        $index = \Yii::$app->request->post('index');
        $index = explode(',', $index);
        $index = array_flip($index);
        $services = Service::find()->all();

        foreach ($services as $service) {
            $service->index = $index[$service->id];
            $service->save();
        }

        return $this->redirect('/admin/service/index');
    }

    public function actionEdit($id, $tab = 'preview')
    {
        $service = Service::findOne($id);
        $seo = $service->getMetaInfo();
        $prices = Price::find()->andWhere(['service_id' => $id])->all();
        $newPrice = new Price();
        $image = new ImageHelper();
        if (\Yii::$app->request->isPost) {
            if ($tab === 'seo') {
                $seo->load(\Yii::$app->request->post());
                if ($seo->save()) {
                    \Yii::$app->session->setFlash('success', 'Изменения успешно сохранены!');
                } else {
                    foreach ($seo->getErrors() as $error) {
                        \Yii::$app->session->setFlash('danger', $error);
                    }
                }
            } else {
                $service->load(\Yii::$app->request->post());
                $service->short_img = $image->upload($service, 'short_img');
                $service->price_img = $image->upload($service, 'price_img');
                $service->main_img = $image->upload($service, 'main_img');
                if ($service->save()) {
                    \Yii::$app->session->setFlash('success', 'Изменения успешно сохранены!');
                } else {
                    foreach ($service->getErrors() as $error) {
                        \Yii::$app->session->setFlash('danger', $error);
                    }
                }
            }
        }

        return $this->render('edit', [
            'service' => $service,
            'prices' => $prices,
            'newPrice' => $newPrice,
            'tab' => $tab,
            'seo' => $seo
        ]);
    }

    public function actionDelete($id)
    {
        if (!\Yii::$app->user->isGuest) {
            $service = Service::findOne($id);
            $service->delete();
        }

        return $this->redirect('/admin/service/index');
    }

    public function actionDeleteImage($id, $tab, $attribute)
    {
        $model = Service::find()->where(['id' => $id])->one();
        $img = new ImageHelper();
        $img->remove($model->$attribute);
        $model->$attribute = null;
        $model->save();

        return $this->redirect('/admin/service/edit?id=' . $model->id . '&tab=' . $tab);
    }
}
